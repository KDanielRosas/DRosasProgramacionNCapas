//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PL.DepartamentoService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Depto", Namespace="http://schemas.datacontract.org/2004/07/SL")]
    [System.SerializableAttribute()]
    public partial class Depto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdDepartamentoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdArea {
            get {
                return this.IdAreaField;
            }
            set {
                if ((this.IdAreaField.Equals(value) != true)) {
                    this.IdAreaField = value;
                    this.RaisePropertyChanged("IdArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdDepartamento {
            get {
                return this.IdDepartamentoField;
            }
            set {
                if ((this.IdDepartamentoField.Equals(value) != true)) {
                    this.IdDepartamentoField = value;
                    this.RaisePropertyChanged("IdDepartamento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DepartamentoService.IDepartamentoService")]
    public interface IDepartamentoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartamentoService/Add", ReplyAction="http://tempuri.org/IDepartamentoService/AddResponse")]
        bool Add(PL.DepartamentoService.Depto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartamentoService/Add", ReplyAction="http://tempuri.org/IDepartamentoService/AddResponse")]
        System.Threading.Tasks.Task<bool> AddAsync(PL.DepartamentoService.Depto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartamentoService/Update", ReplyAction="http://tempuri.org/IDepartamentoService/UpdateResponse")]
        bool Update(PL.DepartamentoService.Depto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartamentoService/Update", ReplyAction="http://tempuri.org/IDepartamentoService/UpdateResponse")]
        System.Threading.Tasks.Task<bool> UpdateAsync(PL.DepartamentoService.Depto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartamentoService/Delete", ReplyAction="http://tempuri.org/IDepartamentoService/DeleteResponse")]
        bool Delete(int idDepartamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartamentoService/Delete", ReplyAction="http://tempuri.org/IDepartamentoService/DeleteResponse")]
        System.Threading.Tasks.Task<bool> DeleteAsync(int idDepartamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartamentoService/GetAll", ReplyAction="http://tempuri.org/IDepartamentoService/GetAllResponse")]
        PL.DepartamentoService.Depto[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartamentoService/GetAll", ReplyAction="http://tempuri.org/IDepartamentoService/GetAllResponse")]
        System.Threading.Tasks.Task<PL.DepartamentoService.Depto[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartamentoService/GetById", ReplyAction="http://tempuri.org/IDepartamentoService/GetByIdResponse")]
        PL.DepartamentoService.Depto GetById(int idDepartamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartamentoService/GetById", ReplyAction="http://tempuri.org/IDepartamentoService/GetByIdResponse")]
        System.Threading.Tasks.Task<PL.DepartamentoService.Depto> GetByIdAsync(int idDepartamento);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDepartamentoServiceChannel : PL.DepartamentoService.IDepartamentoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DepartamentoServiceClient : System.ServiceModel.ClientBase<PL.DepartamentoService.IDepartamentoService>, PL.DepartamentoService.IDepartamentoService {
        
        public DepartamentoServiceClient() {
        }
        
        public DepartamentoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DepartamentoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DepartamentoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DepartamentoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Add(PL.DepartamentoService.Depto obj) {
            return base.Channel.Add(obj);
        }
        
        public System.Threading.Tasks.Task<bool> AddAsync(PL.DepartamentoService.Depto obj) {
            return base.Channel.AddAsync(obj);
        }
        
        public bool Update(PL.DepartamentoService.Depto obj) {
            return base.Channel.Update(obj);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAsync(PL.DepartamentoService.Depto obj) {
            return base.Channel.UpdateAsync(obj);
        }
        
        public bool Delete(int idDepartamento) {
            return base.Channel.Delete(idDepartamento);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(int idDepartamento) {
            return base.Channel.DeleteAsync(idDepartamento);
        }
        
        public PL.DepartamentoService.Depto[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<PL.DepartamentoService.Depto[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public PL.DepartamentoService.Depto GetById(int idDepartamento) {
            return base.Channel.GetById(idDepartamento);
        }
        
        public System.Threading.Tasks.Task<PL.DepartamentoService.Depto> GetByIdAsync(int idDepartamento) {
            return base.Channel.GetByIdAsync(idDepartamento);
        }
    }
}
