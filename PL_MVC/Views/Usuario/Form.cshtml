@model ML.Usuario
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2><i class="fa-solid fa-user fa-fade" style="color:royalblue"></i> Usuario</h2>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("Form", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="form-horizontal">
                    <div>
                        @Html.LabelFor(model => model.IdUsuario, new { @class = "hidden" })
                        @Html.TextBoxFor(model => model.IdUsuario, new { @class = "hidden" })
                        @Html.ValidationMessageFor(model => model.IdUsuario)
                        @*hidden*@
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.UserName)
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa-solid fa-user-tag"></i></span>
                                @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @id = "txtUserName" })
                                @Html.ValidationMessageFor(model => model.UserName)
                            </div>

                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Email)
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa-solid fa-envelope"></i></span>
                                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @id = "txtEmail" })
                                @Html.ValidationMessageFor(model => model.Email)
                            </div>

                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Telefono)
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa-solid fa-phone"></i></span>
                                @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control", @id = "txtTelefono" })
                                @Html.ValidationMessageFor(model => model.Telefono)
                            </div>

                        </div>

                    </div><!-- row -->

                    <div class="row">
                        <br />
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Nombre)
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa-regular fa-address-card"></i></span>
                                @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre" })
                                @Html.ValidationMessageFor(model => model.Nombre)
                            </div>

                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Password)
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa-solid fa-lock"></i></span>
                                @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @id = "txtPassword" })
                                @Html.ValidationMessageFor(model => model.Password)
                            </div>

                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Celular)
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa-solid fa-mobile-screen"></i></span>
                                @Html.TextBoxFor(model => model.Celular, new { @class = "form-control", @id = "txtCelular" })
                                @Html.ValidationMessageFor(model => model.Celular)
                            </div>

                        </div>

                    </div><!-- row -->

                    <div class="row">
                        <br />
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.ApellidoPaterno)
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa-regular fa-address-card"></i></span>
                                @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", @id = "txtApellidoPaterno" })
                                @Html.ValidationMessageFor(model => model.ApellidoPaterno)
                            </div>

                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.FechaNacimiento)
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa-solid fa-calendar-day"></i></span>
                                @Html.TextBoxFor(model => model.FechaNacimiento, new
                                { @class = "form-control", @id = "txtFechaNacimiento", @placeholder = "DD-MM-AAAA" })
                                @Html.ValidationMessageFor(model => model.FechaNacimiento)
                            </div>

                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.CURP)
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa-solid fa-book"></i></span>
                                @Html.TextBoxFor(model => model.CURP, new { @class = "form-control", @id = "txtCURP" })
                                @Html.ValidationMessageFor(model => model.CURP)
                            </div>

                        </div>
                    </div><!-- row -->

                    <div class="row">
                        <br />
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.ApellidoMaterno)
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa-regular fa-address-card"></i></span>
                                @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control", @id = "txtApellidoMaterno" })
                                @Html.ValidationMessageFor(model => model.ApellidoMaterno)
                            </div>

                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Sexo)
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa-solid fa-venus-mars"></i></span>
                                @Html.TextBoxFor(model => model.Sexo, new { @class = "form-control", @id = "txtSexo", @placeholder = "M / F" })
                                @Html.ValidationMessageFor(model => model.Sexo)
                            </div>

                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Rol)
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa-solid fa-users-gear"></i></span>
                                @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.Roles, "IdRol", "Nombre"),
                           "Selecciona un rol", new { @class = "form-control" })
                            </div>
                        </div>
                    </div><!-- row -->

                    <div class="row">
                        <br />
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Direccion.Calle)
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa-solid fa-map-location-dot"></i></span>
                                @Html.TextBoxFor(model => model.Direccion.Calle, new { @class = "form-control", @id = "txtCalle" })
                                @Html.ValidationMessageFor(model => model.Direccion.Calle)
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Direccion.NumeroInterior)
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa-thin fa-hashtag"></i></span>
                                @Html.TextBoxFor(model => model.Direccion.NumeroInterior, new { @class = "form-control", @id = "txtNumeroInterior" })
                                @Html.ValidationMessageFor(model => model.Direccion.NumeroInterior)
                            </div>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Direccion.NumeroExterior)
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa-solid fa-hashtag"></i></span>
                                @Html.TextBoxFor(model => model.Direccion.NumeroExterior, new { @class = "form-control", @id = "txtNumeroExterior" })
                                @Html.ValidationMessageFor(model => model.Direccion.NumeroExterior)
                            </div>
                        </div>

                    </div><!-- row -->

                    <div class="row">
                        <br />
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado.Pais)
                            <div class="input-group">
                                <span class="input-group-addon"><i class="fa-solid fa-map"></i></span>
                                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais,
                               new SelectList(Model.Direccion.Colonia.Municipio.Estado.Pais.Paises, "IdPais", "Nombre"),
                           "Selecciona un pais", new { @class = "form-control", @id = "ddlPais" })
                            </div>
                        </div>

                        @if (Model.Direccion.Colonia.Municipio.Estado.Estados != null)
                        {
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado)
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa-solid fa-map-location-dot"></i></span>
                                    @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado,
                               new SelectList(Model.Direccion.Colonia.Municipio.Estado.Estados, "IdEstado", "Nombre"),
                               "Selecciona un Estado", new { @class = "form-control", @id = "ddlEstado" })
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado)
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa-solid fa-map-location-dot"></i></span>
                                    @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado,
                               new SelectList(string.Empty, "Value", "Text"), "Selecciona un Estado",
                               new { @class = "form-control", @id = "ddlEstado" })
                                </div>
                            </div>
                        }

                        @if (Model.Direccion.Colonia.Municipio.Municipios != null)
                        {
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.Direccion.Colonia.Municipio)
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa-solid fa-location-pin"></i></span>
                                    @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio,
                               new SelectList(Model.Direccion.Colonia.Municipio.Municipios, "IdMunicipio", "Nombre"),
                               "Selecciona un Municipio", new { @class = "form-control", @id = "ddlMunicipio" })
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.Direccion.Colonia.Municipio)
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa-solid fa-location-pin"></i></span>
                                    @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio,
                               new SelectList(string.Empty, "Value", "Text"), "Selecciona un Municipio",
                               new { @class = "form-control", @id = "ddlMunicipio" })
                                </div>
                            </div>
                        }

                    </div><!-- row -->


                    <div class="row">
                        <br />
                        @if (Model.Direccion.Colonia.Colonias != null)
                        {
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.Direccion.Colonia)
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa-solid fa-location-dot"></i></span>
                                    @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia,
                               new SelectList(Model.Direccion.Colonia.Colonias, "IdColonia", "Nombre", "CodigoPostal"),
                               "Selecciona un Municipio", new { @class = "form-control", @id = "ddlColonia" })
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.Direccion.Colonia)
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa-solid fa-location-dot"></i></span>
                                    @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia,
                               new SelectList(string.Empty, "Value", "Text"), "Selecciona una Colonia",
                               new { @class = "form-control", @id = "ddlColonia" })
                                </div>
                            </div>
                        }



                    </div>

                    <div class="row">
                        <br />
                        <div class="col-md-4">
                            <div class="input-group-addon md-4">
                                <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-image"></i></span>
                                <input id="fuImage" type='file' class="form-control" name="fuImage" onchange="validateFile(this), readURL(this);  " />
                            </div>


                            @if (Model.Imagen != null)
                            {

                                <img id="Img" src="data:image/*;base64,@Model.Imagen" style="width:250px ; height:250px" />

                            }
                            else
                            {
                                <img id="Img" src="~/Imagenes/SinImagen.png" style="width:250px ; height:250px" />
                            }
                        </div>
                    </div>
                    

                    <div class="row" style="text-align:end">
                        <hr />
                        <div class="col-6 col-md-10">
                            <input type="submit" value="Guardar" class="btn btn-success" />
                            @Html.ActionLink("Regresar", "GetAll", "Usuario", htmlAttributes: new { @class = "btn btn-danger" })
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div><!--Container-->

@Scripts.Render("~/bundles/jquery")
<script type="text/javascript">
    //Se carga cuando la página está cargada
    $(document).ready(function () {
         //cuando el valor del ddlPais cambie, se activa la función
        $("#ddlPais").change(function () {
            //ddlEstado está vacío
            $("#ddlEstado").empty();
            //se llama a Ajax
            $.ajax({
                //tipo: Get o Post
                type: 'POST',
                //usando HttpHelpers, se manda a llamar al metodo del Controlador
                url: '@Url.Action("EstadoGetByIdPais")',
                //tipo de dato a recibir
                dataType: 'json',
                //se toma el valor del idPais del ddlPais
                data: { idPais: $("#ddlPais").val() },
                //Si todo funciona correctamente...
                success: function (estados) {
                    $("#ddlEstado").append('<option value="0">' + 'Seleccione un Estado' + '</option>');
                    //Similar al Foreach de c#
                    $.each(estados, function (i, estados) {
                        $("#ddlEstado").append('<option value="'
                                                   + estados.IdEstado + '">'
                                                   + estados.Nombre + '</option>');
                    });
                },
                //Si ocurrió algún error
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });//$.ajax
        });//changeFunction

        //cuando el valor de ddlEstado cambie, se activa la funcion
        $("#ddlEstado").change(function () {
            //ddlMunicipio está vacío
            $("#ddlMunicipio").empty();
            //ajax
            $.ajax({
                //tipo
                type: 'POST',
                //Llamar al metodo del controlador
                url: '@Url.Action("MunicipioGetByIdEstado")',
                //tipo de dato a recibir
                dataType: 'json',
                //tomar valor de idEstado del ddlEstado
                data: { idEstado: $("#ddlEstado").val() },
                //si todo funciona correctamente...
                success: function (municipios) {
                    $("#ddlMunicipio").append('<option value="0">' + 'Seleccione un Municipio' + '</option>');
                    //foreach
                    $.each(municipios, function (i, municipios) {
                        $("#ddlMunicipio").append('<option value="'
                            + municipios.IdMunicipio + '">'
                            + municipios.Nombre + '</option>');
                    });
                },
                //Si ocurrio un error
                error: function (ex) {
                    alert('Failed: ' + ex);
                }
            });//ajax
        });//changeFunction

        //cuando el valor de Municipio cambie, se activa la funcion
        $("#ddlMunicipio").change(function () {
            //ddlColonia vacío
            $("#ddlColonia").empty();
            //ajax
            $.ajax({
                //tipo
                type: 'POST',
                //Llamar al método del controlador
                url: '@Url.Action("ColoniaGetByIdMunicipio")',
                //tipo de dato a recibir
                dataType: 'json',
                //tomar valor de idMunicipio del ddlMunicipio
                data: { idMunicipio: $("#ddlMunicipio").val() },
                //si todo funciona bien...
                success: function (colonias) {
                    $("#ddlColonia").append('<option value="0">' + 'Seleccione una colonia' + '</option)');
                    //foreach
                    $.each(colonias, function (i, colonias) {
                        $("#ddlColonia").append('<option value="'
                            + colonias.IdColonia + '">'
                            + colonias.Nombre + ' CP: ' + colonias.CodigoPostal + '</option>');
                    });
                },
                //Si ocurrio un error
                error: function (ex) {
                    alert('Failed: ' + ex);
                }
            });//ajax
        });//changeFunction              
    });//documentReady

    function validateFile() {
        var allowedExtension = ['jpeg', 'jpg', 'png'];
        var fileExtension = document.getElementById('fuImage').value.split('.').pop().toLowerCase();
        var isValidFile = false;
        for (var index in allowedExtension) {
            if (fileExtension === allowedExtension[index]) {
                isValidFile = true;
                break;
            }
        }
        if (!isValidFile) {
            alert('Las extensiones permitidas son : *.' + allowedExtension.join(', *.'));
            document.getElementById('fuImage').value = ""
        }
        return isValidFile;
    }//validateFile

    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#Img').attr('src', e.target.result);
            };
            reader.readAsDataURL(input.files[0]);
        }
    }//readURL 
</script>